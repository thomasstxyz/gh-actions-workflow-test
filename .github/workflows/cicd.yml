name: release

on:
  release:
    types: [published]

env:
  TF_VAR_EXOSCALE_API_KEY: '${{ secrets.TF_VAR_EXOSCALE_API_KEY }}'
  TF_VAR_EXOSCALE_API_SECRET: '${{ secrets.TF_VAR_EXOSCALE_API_SECRET }}'

  # renovate: datasource=github-releases depName=exoscale/cli
  EXO_CLI_VERSION: v1.74.3

  # renovate: datasource=github-releases depName=hashicorp/terraform
  TERRAFORM_VERSION: 1.4.1
  # x 1.5.7

  #

  # renovate: datasource=docker depName=ghcr.io/thomasstxyz/charts/fhb-mcce-aktt2-schuetz-k8s-helm/app
  AKTT2_PRIVATE_OCI_CHART_VERSION: 0.1.1

  # renovate: datasource=docker depName=ghcr.io/thomasstxyz/gitops-promotions-operator
  GOPRO_PUBLIC_DOCKER_IMAGE_VERSION: v0.1.1

  # renovate: datasource=github-tags depName=ansible/awx-operator
  AWX_OPERATOR_VERSION: 2.3.3

  #

  # renovate: datasource=github-tags depName=kubernetes/kubectl
  KUBECTL_VERSION: v1.21.2

  # test
  IAC_DEPLOY_KEY: '${{ secrets.IAC_DEPLOY_KEY }}'

jobs:
  terraform_plan_demo:
    name: "plan demo environment"
    runs-on: ubuntu-latest
    concurrency:
      group: demo
    steps:
      - uses: actions/checkout@v3
      - name: "terraform plan demo"
        uses: "./.github/actions/terraform"
        with:
          environment: demo
          action: apply
          apply: false
          TF_VAR_EXOSCALE_API_KEY: ${{ env.TF_VAR_EXOSCALE_API_KEY }}
          TF_VAR_EXOSCALE_API_SECRET: ${{ env.TF_VAR_EXOSCALE_API_SECRET }}

  raise_pr_deploy_prod:
    name: "Raise PR to deploy to prod"
    needs:
      - terraform_plan_demo
    runs-on: ubuntu-latest
    concurrency:
      group: prod
    env:
      source_branch: "${{ github.event.repository.default_branch }}"
      dest_branch: "prod"
      deploy_tag_ref: "${{ github.ref_name }}"
    steps:
      - name: checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: "${{ env.dest_branch }}"
      - name: reset PR branch onto main branch
        run: |
          git config --global user.name 'Your Name'
          git config --global user.email 'your-username@users.noreply.github.com'
          git fetch --all
          git rebase --onto ${{ env.deploy_tag_ref }} origin/${{ env.source_branch }}
          git push -u origin ${{ env.dest_branch }} --force
      # TODO: check if PR already exists?
      - name: create pull request
        run: |-
          gh pr create
          -B ${{ env.dest_branch }}
          -H ${{ env.source_branch }}
          --title 'Merge ${{ env.source_branch }} into ${{ env.dest_branch }}'
          --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  # terraform_apply_demo:
  #   name: "apply demo environment"
  #   needs:
  #     - terraform_plan_demo
  #   runs-on: ubuntu-latest
  #   environment: demo
  #   concurrency:
  #     group: demo
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: "terraform apply demo"
  #       uses: "./.github/actions/terraform"
  #       with:
  #         environment: demo
  #         action: apply
  #         apply: true
  #         TF_VAR_EXOSCALE_API_KEY: ${{ env.TF_VAR_EXOSCALE_API_KEY }}
  #         TF_VAR_EXOSCALE_API_SECRET: ${{ env.TF_VAR_EXOSCALE_API_SECRET }}

  # terraform_plan_prod:
  #   name: "plan prod environment"
  #   needs:
  #     - terraform_apply_demo
  #   runs-on: ubuntu-latest
  #   concurrency:
  #     group: prod
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: "terraform plan prod"
  #       uses: "./.github/actions/terraform"
  #       with:
  #         environment: prod
  #         action: apply
  #         apply: false
  #         TF_VAR_EXOSCALE_API_KEY: ${{ env.TF_VAR_EXOSCALE_API_KEY }}
  #         TF_VAR_EXOSCALE_API_SECRET: ${{ env.TF_VAR_EXOSCALE_API_SECRET }}

  # terraform_apply_prod:
  #   name: "apply prod environment"
  #   needs:
  #     - terraform_plan_prod
  #   runs-on: ubuntu-latest
  #   environment: prod
  #   concurrency:
  #     group: prod
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: "terraform apply prod"
  #       uses: "./.github/actions/terraform"
  #       with:
  #         environment: prod
  #         action: apply
  #         apply: true
  #         TF_VAR_EXOSCALE_API_KEY: ${{ env.TF_VAR_EXOSCALE_API_KEY }}
  #         TF_VAR_EXOSCALE_API_SECRET: ${{ env.TF_VAR_EXOSCALE_API_SECRET }}
